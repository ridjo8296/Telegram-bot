import logging
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8493344031:AAEVTIolohAk1lD6skMX5Pv2ADo6avVBjvE"
ADMIN_ID = 6644276942
CHAT_ID = "-1003074821645"
REGISTRATION_THREAD_ID = 931
WELCOME_THREAD_ID = 1294

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
def get_main_keyboard():
    keyboard = [
        ["üéÆ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", "üìû –ü–æ–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞"],
        ["üí¨ –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat.type != "private":
        return
    
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
        reply_markup=get_main_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_all_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data = context.user_data
    text = update.message.text
    user = update.effective_user
    
    if update.message.chat.type != "private":
        return
    
    if user_data.get('registration_step') == 'waiting_data':
        registration_info = f"üìù –ù–û–í–ê–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø\n\n–û—Ç: {user.first_name}\n–î–∞–Ω–Ω—ã–µ:\n{text}"
        
        try:
            await context.bot.send_message(
                chat_id=CHAT_ID,
                message_thread_id=REGISTRATION_THREAD_ID,
                text=registration_info
            )
            await update.message.reply_text("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", reply_markup=get_main_keyboard())
            user_data.clear()
            return
        except Exception as e:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.", reply_markup=get_main_keyboard())
            user_data.clear()
            return
    
    if text == "üéÆ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é":
        registration_format = "üéÆ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–ò–º—è: ...\n–ù–∏–∫–Ω–µ–π–º: ...\nActivision ID: ..."
        await update.message.reply_text(registration_format)
        user_data['registration_step'] = 'waiting_data'
    
    elif text == "üìû –ü–æ–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞":
        user = update.effective_user
        admin_call = f"üì¢ –ê–î–ú–ò–ù! {user.first_name} –∑–æ–≤–µ—Ç –≤–∞—Å!"
        try:
            await context.bot.send_message(chat_id=ADMIN_ID, text=admin_call)
            await update.message.reply_text("‚úÖ –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω!")
        except:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞")
    
    elif text == "üí¨ –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç":
        await update.message.reply_text(
            "üí¨ –ù–∞—à —á–∞—Ç:",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç", url="https://t.me/The_bakeryy")]])
        )
    
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
    
    else:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
async def welcome_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if str(update.message.chat_id) != CHAT_ID.replace("-100", "-100"):
        return
        
    for new_member in update.message.new_chat_members:
        welcome_text = f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {new_member.first_name}!\n\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É: @Spaykibot"
        
        try:
            await context.bot.send_message(
                chat_id=CHAT_ID,
                message_thread_id=WELCOME_THREAD_ID,
                text=welcome_text,
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("ü§ñ –ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É", url="https://t.me/Spaykibot")]
                ])
            )
        except:
            pass

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome_new_member))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_all_messages))
    
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway!")
    application.run_polling()

if __name__ == "__main__":
    main()
